#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

# $Id: calc.y,v 1.4 2005/11/20 13:29:32 aamine Exp $
class Tinyc < Racc::Parser

module_eval(<<'...end compiler.y/module_eval...', 'compiler.y', 239)
  
  def parse(str)
    @q = []
    until str.empty?
      case str
      when /\A\s+/
      when /\A\d+/
        @q.push [:CONSTANT, $&.to_i]
      when /\A(&&)/
        @q.push [:LOGICALAND, $&]
      when /\A(\|\|)/
        @q.push [:LOGICALOR, $&]
      when /\A(int)/
        @q.push [:DATATYPE, $&]
      when /\A(if)/
        @q.push [:IF, $&]
      when /\A(else)/
        @q.push [:ELSE, $&]
      when /\A(while)/
        @q.push [:WHILE, $&]
      when /\A(<=)/
        @q.push [:LE, $&]
      when /\A(>=)/
        @q.push [:GE, $&]
      when /\A(==)/
        @q.push [:EQUAL, $&]
      when /\A(!=)/
        @q.push [:NOTEQUAL, $&]
      when /\A(return)/
        @q.push [:RETURN, $&]
      when /\A[a-zA-Z]\w*/
	@q.push [:IDENTIFIER, $&]
      when /\A.|\n/o
        s = $&
        @q.push [s, s]
      end
      str = $'
    end
    @q.push [false, '$end']
    do_parse
  end

  def next_token
    @q.shift
  end

...end compiler.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    34,    65,    35,    36,    70,    71,     6,    99,     5,    34,
    56,    35,    36,    62,    50,    68,    69,   100,    53,    24,
    56,    60,    31,    50,    42,    52,    64,    53,    24,    70,
    71,    31,    50,    42,    52,    34,    53,    35,    36,    58,
    68,    69,    77,    52,    34,   101,    35,    36,    56,    50,
    74,    75,    57,    53,    24,    72,    73,    31,    50,    42,
    52,    26,    53,    24,    70,    71,    31,    50,    42,    52,
    34,    53,    35,    36,    65,    68,    69,    77,    52,    66,
    67,    63,    64,   102,    50,   103,    50,    10,    53,    24,
    53,    26,    31,    19,    42,    52,    77,    52,    50,    24,
    50,    10,    53,    50,    53,    72,    73,    53,    77,    52,
    77,    52,    50,    77,    52,    50,    53,    50,    21,    53,
    50,    53,    77,    52,    53,    77,    52,    42,    52,    50,
    42,    52,    50,    53,    50,    20,    53,    50,    53,    77,
    52,    53,    42,    52,    42,    52,    50,    77,    52,    50,
    53,    50,    19,    53,    50,    53,    42,    52,    53,    42,
    52,    77,    52,    50,    77,    52,    50,    53,    50,    10,
    53,    14,    53,    77,    52,    11,    42,    52,    42,    52,
    55,    56,    12,    13,    66,    67,    74,    75,    74,    75,
    72,    73,    72,    73,    72,    73,    82,    56,    10,   107,
     5 ]

racc_action_check = [
   107,    43,   107,   107,    45,    45,     1,    78,     1,   100,
    78,   100,   100,    41,   107,    45,    45,    80,   107,   107,
    80,    37,   107,   100,   107,   107,    77,   100,   100,    89,
    89,   100,    74,   100,   100,    39,    74,    39,    39,    35,
    89,    89,    74,    74,   101,    81,   101,   101,    81,    39,
    47,    47,    34,    39,    39,    46,    46,    39,   101,    39,
    39,    29,   101,   101,    90,    90,   101,    71,   101,   101,
    27,    71,    27,    27,    83,    90,    90,    71,    71,    44,
    44,    42,    42,    85,    27,    87,    70,    26,    27,    27,
    70,    24,    27,    21,    27,    27,    70,    70,    69,    20,
    68,    19,    69,    67,    68,    94,    94,    67,    69,    69,
    68,    68,    66,    67,    67,    65,    66,    53,    18,    65,
    64,    53,    66,    66,    64,    65,    65,    53,    53,    50,
    64,    64,    57,    50,    58,    16,    57,    75,    58,    50,
    50,    75,    57,    57,    58,    58,   103,    75,    75,    63,
   103,    62,    14,    63,    73,    62,   103,   103,    73,    63,
    63,    62,    62,    72,    73,    73,    56,    72,    36,    13,
    56,     9,    36,    72,    72,     6,    56,    56,    36,    36,
    32,    32,     8,     8,    88,    88,    96,    96,    95,    95,
    91,    91,    92,    92,    93,    93,    59,    59,     5,   104,
     0 ]

racc_action_pointer = [
   198,     6,   nil,   nil,   nil,   171,   175,   nil,   157,   150,
   nil,   nil,   nil,   142,   150,   nil,   112,   nil,    92,    74,
    77,    91,   nil,   nil,    89,   nil,    60,    67,   nil,    59,
   nil,   nil,   155,   nil,    31,    18,   151,    -3,   nil,    32,
   nil,     1,    61,   -10,    70,    -3,    39,    37,   nil,   nil,
   112,   nil,   nil,   100,   nil,   nil,   149,   115,   117,   171,
   nil,   nil,   134,   132,   103,    98,    95,    86,    83,    81,
    69,    50,   146,   137,    15,   120,   nil,     5,   -16,   nil,
    -6,    22,   nil,    63,   nil,    60,   nil,    59,   175,    22,
    57,   174,   176,   178,    89,   175,   173,   nil,   nil,   nil,
     6,    41,   nil,   129,   195,   nil,   nil,    -3,   nil ]

racc_action_default = [
   -64,   -64,    -1,    -3,    -4,   -64,   -64,    -2,   -64,    -6,
    -8,   109,    -5,   -64,   -13,    -7,   -64,   -10,   -12,   -64,
   -64,   -64,   -14,    -9,   -26,   -11,   -64,   -30,   -23,   -25,
    -6,   -15,   -64,   -17,   -64,   -64,   -64,   -64,   -27,   -29,
   -31,   -33,   -57,   -35,   -37,   -39,   -42,   -47,   -50,   -53,
   -64,   -55,   -58,   -64,   -24,   -16,   -64,   -64,   -64,   -64,
   -22,   -28,   -64,   -64,   -63,   -64,   -64,   -64,   -64,   -64,
   -64,   -64,   -64,   -64,   -64,   -64,   -54,   -57,   -64,   -32,
   -64,   -64,   -21,   -36,   -34,   -64,   -60,   -62,   -38,   -40,
   -41,   -43,   -44,   -45,   -46,   -48,   -49,   -51,   -52,   -59,
   -64,   -64,   -56,   -64,   -18,   -20,   -61,   -64,   -19 ]

racc_goto_table = [
    38,    79,    76,    59,    17,    28,    37,     9,    84,    86,
    54,    25,    61,    89,    90,    15,    91,    92,    93,    94,
    78,    22,    95,    96,    80,    81,    97,    98,    30,     2,
     7,    29,    39,    27,    83,    88,    18,    23,    16,     1,
    85,    87,   nil,   nil,   nil,   nil,   nil,   nil,   106,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   104,   105,   nil,   nil,   nil,   nil,   nil,
   108 ]

racc_goto_check = [
    11,    17,    24,    12,    10,     3,    14,     6,    17,    17,
     3,    10,    11,    21,    21,     6,    22,    22,    22,    22,
    12,     6,    23,    23,    12,    12,    24,    24,     6,     2,
     2,    15,    16,    13,    19,    20,     9,     8,     7,     1,
    27,    28,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    11,    11,   nil,   nil,   nil,   nil,   nil,
    11 ]

racc_goto_pointer = [
   nil,    39,    29,   -19,   nil,   nil,     2,    24,    17,    22,
   -10,   -27,   -33,     9,   -21,     7,     5,   -55,   nil,   -28,
   -30,   -53,   -52,   -50,   -48,   nil,   nil,   -24,   -23 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     8,   nil,   nil,    33,   nil,
   nil,   nil,    32,   nil,   nil,   nil,   nil,    40,    41,    43,
    44,    45,    46,    47,    48,    49,    51,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_none,
  2, 30, :_reduce_2,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 32, :_reduce_5,
  1, 34, :_reduce_6,
  3, 34, :_reduce_7,
  1, 35, :_reduce_none,
  6, 33, :_reduce_9,
  1, 38, :_reduce_10,
  3, 38, :_reduce_11,
  1, 36, :_reduce_none,
  0, 36, :_reduce_none,
  2, 39, :_reduce_14,
  1, 40, :_reduce_15,
  2, 40, :_reduce_16,
  1, 40, :_reduce_none,
  5, 40, :_reduce_18,
  7, 40, :_reduce_19,
  5, 40, :_reduce_20,
  3, 40, :_reduce_21,
  4, 37, :_reduce_22,
  1, 44, :_reduce_none,
  2, 44, :_reduce_24,
  1, 42, :_reduce_none,
  0, 42, :_reduce_none,
  1, 45, :_reduce_none,
  2, 45, :_reduce_28,
  1, 43, :_reduce_none,
  0, 43, :_reduce_none,
  1, 41, :_reduce_31,
  3, 41, :_reduce_32,
  1, 46, :_reduce_none,
  3, 46, :_reduce_34,
  1, 47, :_reduce_none,
  3, 47, :_reduce_36,
  1, 48, :_reduce_none,
  3, 48, :_reduce_38,
  1, 49, :_reduce_none,
  3, 49, :_reduce_40,
  3, 49, :_reduce_41,
  1, 50, :_reduce_none,
  3, 50, :_reduce_43,
  3, 50, :_reduce_44,
  3, 50, :_reduce_45,
  3, 50, :_reduce_46,
  1, 51, :_reduce_none,
  3, 51, :_reduce_48,
  3, 51, :_reduce_49,
  1, 52, :_reduce_none,
  3, 52, :_reduce_51,
  3, 52, :_reduce_52,
  1, 53, :_reduce_none,
  2, 53, :_reduce_54,
  1, 54, :_reduce_none,
  4, 54, :_reduce_56,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  3, 55, :_reduce_59,
  1, 57, :_reduce_none,
  3, 57, :_reduce_61,
  1, 56, :_reduce_none,
  0, 56, :_reduce_none ]

racc_reduce_n = 64

racc_shift_n = 109

racc_token_table = {
  false => 0,
  :error => 1,
  :DATATYPE => 2,
  :IF => 3,
  :ELSE => 4,
  :WHILE => 5,
  :RETURN => 6,
  :LE => 7,
  :GE => 8,
  :EQUAL => 9,
  :NOTEQUAL => 10,
  :LOGICALAND => 11,
  :LOGICALOR => 12,
  "*" => 13,
  "/" => 14,
  "%" => 15,
  "+" => 16,
  "-" => 17,
  "<" => 18,
  ">" => 19,
  "=" => 20,
  "(" => 21,
  "{" => 22,
  ")" => 23,
  "}" => 24,
  ";" => 25,
  "," => 26,
  :IDENTIFIER => 27,
  :CONSTANT => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DATATYPE",
  "IF",
  "ELSE",
  "WHILE",
  "RETURN",
  "LE",
  "GE",
  "EQUAL",
  "NOTEQUAL",
  "LOGICALAND",
  "LOGICALOR",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"=\"",
  "\"(\"",
  "\"{\"",
  "\")\"",
  "\"}\"",
  "\";\"",
  "\",\"",
  "IDENTIFIER",
  "CONSTANT",
  "$start",
  "program",
  "external_declaration",
  "declaration",
  "function_definition",
  "declarator_list",
  "declarator",
  "parameter_type_list_opt",
  "compound_statement",
  "parameter_type_list",
  "parameter_declaration",
  "statement",
  "expression",
  "declaration_list_opt",
  "statement_list_opt",
  "declaration_list",
  "statement_list",
  "assign_expr",
  "logical_OR_expr",
  "logical_AND_expr",
  "equality_expr",
  "relational_expr",
  "add_expr",
  "mult_expr",
  "unary_expr",
  "posifix_expr",
  "primary_expr",
  "argument_expression_list_opt",
  "argument_expression_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'compiler.y', 29)
  def _reduce_2(val, _values, result)
    	  result = [val[0], val[1]] 
        
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'compiler.y', 37)
  def _reduce_5(val, _values, result)
    	  result = []
	  for i in val[1]
	    result += [ [val[0], i ] ]
	  end
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 45)
  def _reduce_6(val, _values, result)
    	  result = [val[0]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 49)
  def _reduce_7(val, _values, result)
    	  result += [val[2]]
        
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'compiler.y', 56)
  def _reduce_9(val, _values, result)
    	  result = [ [val[0], val[1]], val[3], val[5] ]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 61)
  def _reduce_10(val, _values, result)
    	  result = [val[0]]
	
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 65)
  def _reduce_11(val, _values, result)
              result = [val[0]] + [val[2]]
        
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'compiler.y', 73)
  def _reduce_14(val, _values, result)
    	  result = [val[0], val[1]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 78)
  def _reduce_15(val, _values, result)
    	  result = ''
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 82)
  def _reduce_16(val, _values, result)
    	  result = val[0]
        
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'compiler.y', 87)
  def _reduce_18(val, _values, result)
    	  result = [['IF'] + val[2] + [val[4]]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 91)
  def _reduce_19(val, _values, result)
    	  result = [['IF'] + val[2] + [val[4], val[6]]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 95)
  def _reduce_20(val, _values, result)
    	  result = [['WHILE'] + val[2] + [val[4]]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 99)
  def _reduce_21(val, _values, result)
    	  result = [['RETURN'] + val[1]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 104)
  def _reduce_22(val, _values, result)
    	  result = []
          if val[1] != nil
	    result += val[1]
	  end
	  if val[2] != nil
	    result += val[2]
	  end
        
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'compiler.y', 116)
  def _reduce_24(val, _values, result)
    	  result = [val[0], val[1]]
        
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'compiler.y', 125)
  def _reduce_28(val, _values, result)
    	  result = val[0] + val[1]
        
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'compiler.y', 133)
  def _reduce_31(val, _values, result)
    	  result = [val[0]]
	
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 137)
  def _reduce_32(val, _values, result)
    	  result = [val[0], val[2]]
        
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'compiler.y', 143)
  def _reduce_34(val, _values, result)
    	  result = ['=', val[0], val[2]]
        
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'compiler.y', 149)
  def _reduce_36(val, _values, result)
    	  result = ['||', val[0], val[2]]
        
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'compiler.y', 155)
  def _reduce_38(val, _values, result)
    	  result = ['&&', val[0], val[2]]
        
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'compiler.y', 161)
  def _reduce_40(val, _values, result)
    	  result = ['==', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 165)
  def _reduce_41(val, _values, result)
    	  result = ['!=', val[0], val[2]]
        
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'compiler.y', 171)
  def _reduce_43(val, _values, result)
    	  result = ['<', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 175)
  def _reduce_44(val, _values, result)
    	  result = ['>', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 179)
  def _reduce_45(val, _values, result)
    	  result = ['<=', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 183)
  def _reduce_46(val, _values, result)
    	  result = ['>=', val[0], val[2]]
        
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'compiler.y', 189)
  def _reduce_48(val, _values, result)
    	  result = ['+', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 193)
  def _reduce_49(val, _values, result)
    	  result = ['-', val[0], val[2]]
        
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'compiler.y', 199)
  def _reduce_51(val, _values, result)
    	  result = ['*', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 203)
  def _reduce_52(val, _values, result)
    	  result = ['/', val[0], val[2]]
        
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'compiler.y', 209)
  def _reduce_54(val, _values, result)
    	  result = -(val[1].to_i).to_s
        
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'compiler.y', 215)
  def _reduce_56(val, _values, result)
    	  result = ['FCALL',val[0]] + [val[2]]
        
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'compiler.y', 222)
  def _reduce_59(val, _values, result)
    	  result = [val[1]]
        
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'compiler.y', 228)
  def _reduce_61(val, _values, result)
    	  result = [val[0], val[2]]
        
    result
  end
.,.,

# reduce 62 omitted

# reduce 63 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Tinyc


parser = Tinyc.new

str = ''
while true
  add = gets
  if add == nil
    break
  else
    str += add
  end
end
if str != nil
  str.chop!
  begin
    puts "success!!! \n result => \n#{parser.parse(str)}"
  rescue ParseError
    puts $!
  end
end
