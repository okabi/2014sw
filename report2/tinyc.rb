#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

# $Id: calc.y,v 1.4 2005/11/20 13:29:32 aamine Exp $
class Tinyc < Racc::Parser

module_eval(<<'...end compiler.y/module_eval...', 'compiler.y', 268)
  
  def parse(str)
    @q = []
    until str.empty?
      case str
      when /\A\s+/
      when /\A\d+/
        @q.push [:CONSTANT, $&.to_i]
      when /\A(&&)/
        @q.push [:LOGICALAND, $&]
      when /\A(\|\|)/
        @q.push [:LOGICALOR, $&]
      when /\A(int)/
        @q.push [:DATATYPE, $&]
      when /\A(if)/
        @q.push [:IF, $&]
      when /\A(else)/
        @q.push [:ELSE, $&]
      when /\A(while)/
        @q.push [:WHILE, $&]
      when /\A(<=)/
        @q.push [:LE, $&]
      when /\A(>=)/
        @q.push [:GE, $&]
      when /\A(==)/
        @q.push [:EQUAL, $&]
      when /\A(!=)/
        @q.push [:NOTEQUAL, $&]
      when /\A(return)/
        @q.push [:RETURN, $&]
      when /\A[a-zA-Z]\w*/
	@q.push [:IDENTIFIER, $&]
      when /\A.|\n/o
        s = $&
        @q.push [s, s]
      end
      str = $'
    end
    @q.push [false, '$end']
    do_parse
  end

  def next_token
    @q.shift
  end

...end compiler.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    37,    68,    38,    39,    73,    74,     6,   102,     5,    37,
    59,    38,    39,    65,    53,    71,    72,   103,    56,    28,
    59,    63,    34,    53,    45,    55,    67,    56,    28,    73,
    74,    34,    53,    45,    55,    37,    56,    38,    39,    61,
    71,    72,    80,    55,    37,   104,    38,    39,    59,    53,
    77,    78,    60,    56,    28,    75,    76,    34,    53,    45,
    55,    30,    56,    28,    73,    74,    34,    53,    45,    55,
    37,    56,    38,    39,    68,    71,    72,    80,    55,    69,
    70,    66,    67,   105,    53,   106,    53,    16,    56,    28,
    56,    30,    34,    28,    45,    55,    80,    55,    53,    21,
    53,    16,    56,    53,    56,    75,    76,    56,    80,    55,
    80,    55,    53,    80,    55,    53,    56,    53,    23,    56,
    53,    56,    80,    55,    56,    80,    55,    45,    55,    53,
    45,    55,    53,    56,    53,    22,    56,    53,    56,    80,
    55,    56,    45,    55,    45,    55,    53,    80,    55,    53,
    56,    53,    21,    56,    53,    56,    45,    55,    56,    45,
    55,    80,    55,    53,    80,    55,    53,    56,    53,    16,
    56,    14,    56,    80,    55,    11,    45,    55,    45,    55,
    58,    59,    12,    13,    69,    70,    77,    78,    77,    78,
    75,    76,    75,    76,    75,    76,    85,    59,    10,   110,
     5 ]

racc_action_check = [
   110,    46,   110,   110,    48,    48,     1,    81,     1,   103,
    81,   103,   103,    44,   110,    48,    48,    83,   110,   110,
    83,    40,   110,   103,   110,   110,    80,   103,   103,    92,
    92,   103,    77,   103,   103,    42,    77,    42,    42,    38,
    92,    92,    77,    77,   104,    84,   104,   104,    84,    42,
    50,    50,    37,    42,    42,    49,    49,    42,   104,    42,
    42,    33,   104,   104,    93,    93,   104,    74,   104,   104,
    31,    74,    31,    31,    86,    93,    93,    74,    74,    47,
    47,    45,    45,    88,    31,    90,    73,    30,    31,    31,
    73,    29,    31,    25,    31,    31,    73,    73,    72,    23,
    71,    21,    72,    70,    71,    97,    97,    70,    72,    72,
    71,    71,    69,    70,    70,    68,    69,    56,    20,    68,
    67,    56,    69,    69,    67,    68,    68,    56,    56,    53,
    67,    67,    60,    53,    61,    18,    60,    78,    61,    53,
    53,    78,    60,    60,    61,    61,   106,    78,    78,    66,
   106,    65,    17,    66,    76,    65,   106,   106,    76,    66,
    66,    65,    65,    75,    76,    76,    59,    75,    39,    13,
    59,    10,    39,    75,    75,     6,    59,    59,    39,    39,
    35,    35,     8,     8,    91,    91,    99,    99,    98,    98,
    94,    94,    95,    95,    96,    96,    62,    62,     5,   107,
     0 ]

racc_action_pointer = [
   198,     6,   nil,   nil,   nil,   171,   175,   nil,   157,   nil,
   150,   nil,   nil,   142,   nil,   nil,   nil,   150,   112,   nil,
    92,    74,   nil,    97,   nil,    71,   nil,   nil,   nil,    89,
    60,    67,   nil,    59,   nil,   155,   nil,    31,    18,   151,
    -3,   nil,    32,   nil,     1,    61,   -10,    70,    -3,    39,
    37,   nil,   nil,   112,   nil,   nil,   100,   nil,   nil,   149,
   115,   117,   171,   nil,   nil,   134,   132,   103,    98,    95,
    86,    83,    81,    69,    50,   146,   137,    15,   120,   nil,
     5,   -16,   nil,    -6,    22,   nil,    63,   nil,    60,   nil,
    59,   175,    22,    57,   174,   176,   178,    89,   175,   173,
   nil,   nil,   nil,     6,    41,   nil,   129,   195,   nil,   nil,
    -3,   nil ]

racc_action_default = [
   -67,   -67,    -1,    -3,    -4,   -67,   -67,    -2,   -67,    -6,
    -8,   112,    -5,   -67,    -9,    -7,    -8,   -15,   -67,   -12,
   -14,   -67,   -10,   -67,   -16,   -67,   -13,   -11,   -24,   -29,
   -67,   -33,   -26,   -28,   -17,   -67,   -19,   -67,   -67,   -67,
   -67,   -30,   -32,   -34,   -36,   -60,   -38,   -40,   -42,   -45,
   -50,   -53,   -56,   -67,   -58,   -61,   -67,   -27,   -18,   -67,
   -67,   -67,   -67,   -25,   -31,   -67,   -67,   -66,   -67,   -67,
   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -57,
   -60,   -67,   -35,   -67,   -67,   -23,   -39,   -37,   -67,   -63,
   -65,   -41,   -43,   -44,   -46,   -47,   -48,   -49,   -51,   -52,
   -54,   -55,   -62,   -67,   -67,   -59,   -67,   -20,   -22,   -64,
   -67,   -21 ]

racc_goto_table = [
    41,    82,    79,    62,    15,    40,    32,    19,    87,    89,
    57,    64,    24,    26,    94,    95,    96,    97,    92,    93,
    81,    98,    99,    31,    83,    84,   100,   101,     2,     7,
    25,    33,    29,    42,    17,    86,    91,    20,    27,    18,
     1,    88,    90,   nil,   nil,   nil,   nil,   nil,   109,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   107,   108,   nil,   nil,   nil,   nil,   nil,   111 ]

racc_goto_check = [
    13,    20,    27,    14,     6,    16,     3,    12,    20,    20,
     3,    13,     6,    12,    25,    25,    25,    25,    24,    24,
    14,    26,    26,    15,    14,    14,    27,    27,     2,     2,
    11,    17,    18,    19,    10,    22,    23,     9,     8,     7,
     1,    30,    31,   nil,   nil,   nil,   nil,   nil,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    13,    13,   nil,   nil,   nil,   nil,   nil,    13 ]

racc_goto_pointer = [
   nil,    40,    28,   -23,   nil,   nil,    -9,    22,    13,    20,
    20,     8,   -10,   -31,   -36,    -6,   -26,     2,     4,     2,
   -58,   nil,   -30,   -32,   -51,   -57,   -54,   -51,   nil,   nil,
   -26,   -25 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     8,     9,   nil,    36,   nil,
   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,   nil,   nil,
    43,    44,    46,    47,    48,    49,    50,    51,    52,    54,
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_none,
  2, 30, :_reduce_2,
  1, 31, :_reduce_3,
  1, 31, :_reduce_4,
  3, 32, :_reduce_5,
  1, 34, :_reduce_6,
  3, 34, :_reduce_7,
  1, 35, :_reduce_none,
  0, 39, :_reduce_9,
  0, 40, :_reduce_10,
  8, 33, :_reduce_11,
  1, 38, :_reduce_12,
  3, 38, :_reduce_13,
  1, 36, :_reduce_none,
  0, 36, :_reduce_15,
  2, 41, :_reduce_16,
  1, 42, :_reduce_17,
  2, 42, :_reduce_18,
  1, 42, :_reduce_none,
  5, 42, :_reduce_20,
  7, 42, :_reduce_21,
  5, 42, :_reduce_22,
  3, 42, :_reduce_23,
  0, 47, :_reduce_24,
  5, 37, :_reduce_25,
  1, 46, :_reduce_none,
  2, 46, :_reduce_27,
  1, 44, :_reduce_none,
  0, 44, :_reduce_none,
  1, 48, :_reduce_none,
  2, 48, :_reduce_31,
  1, 45, :_reduce_none,
  0, 45, :_reduce_none,
  1, 43, :_reduce_34,
  3, 43, :_reduce_35,
  1, 49, :_reduce_none,
  3, 49, :_reduce_37,
  1, 50, :_reduce_none,
  3, 50, :_reduce_39,
  1, 51, :_reduce_none,
  3, 51, :_reduce_41,
  1, 52, :_reduce_none,
  3, 52, :_reduce_43,
  3, 52, :_reduce_44,
  1, 53, :_reduce_none,
  3, 53, :_reduce_46,
  3, 53, :_reduce_47,
  3, 53, :_reduce_48,
  3, 53, :_reduce_49,
  1, 54, :_reduce_none,
  3, 54, :_reduce_51,
  3, 54, :_reduce_52,
  1, 55, :_reduce_none,
  3, 55, :_reduce_54,
  3, 55, :_reduce_55,
  1, 56, :_reduce_none,
  2, 56, :_reduce_57,
  1, 57, :_reduce_none,
  4, 57, :_reduce_59,
  1, 58, :_reduce_60,
  1, 58, :_reduce_none,
  3, 58, :_reduce_62,
  1, 60, :_reduce_63,
  3, 60, :_reduce_64,
  1, 59, :_reduce_none,
  0, 59, :_reduce_none ]

racc_reduce_n = 67

racc_shift_n = 112

racc_token_table = {
  false => 0,
  :error => 1,
  :DATATYPE => 2,
  :IF => 3,
  :ELSE => 4,
  :WHILE => 5,
  :RETURN => 6,
  :LE => 7,
  :GE => 8,
  :EQUAL => 9,
  :NOTEQUAL => 10,
  :LOGICALAND => 11,
  :LOGICALOR => 12,
  "*" => 13,
  "/" => 14,
  "%" => 15,
  "+" => 16,
  "-" => 17,
  "<" => 18,
  ">" => 19,
  "=" => 20,
  "(" => 21,
  "{" => 22,
  ")" => 23,
  "}" => 24,
  ";" => 25,
  "," => 26,
  :IDENTIFIER => 27,
  :CONSTANT => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DATATYPE",
  "IF",
  "ELSE",
  "WHILE",
  "RETURN",
  "LE",
  "GE",
  "EQUAL",
  "NOTEQUAL",
  "LOGICALAND",
  "LOGICALOR",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"=\"",
  "\"(\"",
  "\"{\"",
  "\")\"",
  "\"}\"",
  "\";\"",
  "\",\"",
  "IDENTIFIER",
  "CONSTANT",
  "$start",
  "program",
  "external_declaration",
  "declaration",
  "function_definition",
  "declarator_list",
  "declarator",
  "parameter_type_list_opt",
  "compound_statement",
  "parameter_type_list",
  "@1",
  "@2",
  "parameter_declaration",
  "statement",
  "expression",
  "declaration_list_opt",
  "statement_list_opt",
  "declaration_list",
  "@3",
  "statement_list",
  "assign_expr",
  "logical_OR_expr",
  "logical_AND_expr",
  "equality_expr",
  "relational_expr",
  "add_expr",
  "mult_expr",
  "unary_expr",
  "posifix_expr",
  "primary_expr",
  "argument_expression_list_opt",
  "argument_expression_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'compiler.y', 30)
  def _reduce_2(val, _values, result)
    	  result = val[0] + val[1] 
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 35)
  def _reduce_3(val, _values, result)
    	result = val[0]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 39)
  def _reduce_4(val, _values, result)
    	result = [val[0]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 44)
  def _reduce_5(val, _values, result)
    	  result = []
	  for i in val[1]
	    result += [ [val[0], i ] ]
	  end
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 52)
  def _reduce_6(val, _values, result)
    	  result = [val[0]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 56)
  def _reduce_7(val, _values, result)
    	  result += [val[2]]
        
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'compiler.y', 63)
  def _reduce_9(val, _values, result)
    	
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 66)
  def _reduce_10(val, _values, result)
    	
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 69)
  def _reduce_11(val, _values, result)
    	  result = [ [val[0], val[1]], val[4], val[7] ]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 74)
  def _reduce_12(val, _values, result)
    	  result = [val[0]]
	
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 78)
  def _reduce_13(val, _values, result)
              result = val[0] + [val[2]]
        
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'compiler.y', 84)
  def _reduce_15(val, _values, result)
    	result = []
      
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 89)
  def _reduce_16(val, _values, result)
    	  result = [val[0], val[1]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 94)
  def _reduce_17(val, _values, result)
    	  result = ''
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 98)
  def _reduce_18(val, _values, result)
    	  result = val[0]
        
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'compiler.y', 103)
  def _reduce_20(val, _values, result)
    	  result = [['IF'] + val[2] + [val[4]]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 107)
  def _reduce_21(val, _values, result)
    	  result = [['IF'] + val[2] + [val[4], val[6]]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 111)
  def _reduce_22(val, _values, result)
    	  result = [['WHILE'] + val[2] + [val[4]]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 115)
  def _reduce_23(val, _values, result)
    	  result = [['RETURN'] + val[1]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 120)
  def _reduce_24(val, _values, result)
            
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 123)
  def _reduce_25(val, _values, result)
    	  result = []
          if val[2] != nil
	    result += val[2]
	  end
	  if val[3] != nil
	    result += val[3]
	  end
        
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'compiler.y', 135)
  def _reduce_27(val, _values, result)
    	  result = [val[0], val[1]]
        
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'compiler.y', 144)
  def _reduce_31(val, _values, result)
    	  result = val[0] + val[1]
        
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'compiler.y', 152)
  def _reduce_34(val, _values, result)
    	  result = [val[0]]
	
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 156)
  def _reduce_35(val, _values, result)
    	  result = [val[0], val[2]]
        
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'compiler.y', 162)
  def _reduce_37(val, _values, result)
    	  result = ['=', val[0], val[2]]
        
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'compiler.y', 168)
  def _reduce_39(val, _values, result)
    	  result = ['||', val[0], val[2]]
        
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'compiler.y', 174)
  def _reduce_41(val, _values, result)
    	  result = ['&&', val[0], val[2]]
        
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'compiler.y', 180)
  def _reduce_43(val, _values, result)
    	  result = ['==', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 184)
  def _reduce_44(val, _values, result)
    	  result = ['!=', val[0], val[2]]
        
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'compiler.y', 190)
  def _reduce_46(val, _values, result)
    	  result = ['<', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 194)
  def _reduce_47(val, _values, result)
    	  result = ['>', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 198)
  def _reduce_48(val, _values, result)
    	  result = ['<=', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 202)
  def _reduce_49(val, _values, result)
    	  result = ['>=', val[0], val[2]]
        
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'compiler.y', 208)
  def _reduce_51(val, _values, result)
    	  result = ['+', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 212)
  def _reduce_52(val, _values, result)
    	  result = ['-', val[0], val[2]]
        
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'compiler.y', 218)
  def _reduce_54(val, _values, result)
    	  result = ['*', val[0], val[2]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 222)
  def _reduce_55(val, _values, result)
    	  result = ['/', val[0], val[2]]
        
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'compiler.y', 228)
  def _reduce_57(val, _values, result)
    	  result = -(val[1].to_i).to_s
        
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'compiler.y', 234)
  def _reduce_59(val, _values, result)
              if val[2] == nil
	    result = ['FCALL',val[0], []]
	  else
	    result = ['FCALL',val[0]] + [val[2]]
          end
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 243)
  def _reduce_60(val, _values, result)
              result = val[0]
	
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'compiler.y', 248)
  def _reduce_62(val, _values, result)
    	  result = [val[1]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 253)
  def _reduce_63(val, _values, result)
    	  result = [val[0]]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 257)
  def _reduce_64(val, _values, result)
    	  result = val[0] + [val[2]]
        
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Tinyc


parser = Tinyc.new

str = ''
while true
  add = gets
  if add == nil
    break
  else
    str += add
  end
end
if str != nil
  str.chop!
  begin
    puts "success!!! \n result => \n#{parser.parse(str)}"
  rescue ParseError
    puts $!
  end
end
